services:
  web:
    build: .
    ports:
      - "5002:5000"
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=5dJcmv1vX4mSQEQh6RSXlccV2jukwLiW
      - DATABASE_URL=postgresql://postgres:d7tm3YJJJ7RHVgovPtFzwhK4TsrSbOpT@db:5432/scheduling_db
    volumes:
      - uploads:/app/app/static/uploads
      - instance_uploads:/app/instance/uploads
      - backup_data:/app/backups
      - instance_data:/app/instance
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/auth/login"]
      interval: 30s
      timeout: 10s
      retries: 3
    # UPDATED: Add automatic deploy command on startup
    command: ["sh", "-c", "while ! pg_isready -h db -p 5432 -U postgres; do sleep 1; done && flask deploy && gunicorn --bind 0.0.0.0:5000 --workers 4 --timeout 120 run:app"]

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=scheduling_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=d7tm3YJJJ7RHVgovPtFzwhK4TsrSbOpT
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5400:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d scheduling_db"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  uploads:
    driver: local
  instance_uploads:
    driver: local
  backup_data:
    driver: local
  instance_data:
    driver: local
