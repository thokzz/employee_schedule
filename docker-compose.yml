# Updated docker-compose.yml - PRESERVING all existing volumes and adding backup support
services:
  web:
    build: .
    ports:
      - "5002:5000"
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=your-production-secret-key-change-this
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/scheduling_db
    volumes:
      # PRESERVING EXISTING UPLOAD VOLUMES
      - uploads:/app/app/static/uploads
      - instance_uploads:/app/instance/uploads
      # NEW: Adding backup volume for database backups
      - backup_data:/app/backups
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/auth/login"]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=scheduling_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5400:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d scheduling_db"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: unless-stopped

volumes:
  # PRESERVING ALL EXISTING VOLUMES
  postgres_data:
    driver: local
  uploads:
    driver: local
  instance_uploads:
    driver: local
  # NEW: Adding backup volume
  backup_data:
    driver: local